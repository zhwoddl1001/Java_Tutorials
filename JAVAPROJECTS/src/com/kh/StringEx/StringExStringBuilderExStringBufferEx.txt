
String / StringBuilder  / StringBuffer
모두 문자열을 처리하는 클래스

String
String 변하지 않는 객체 = 불변
한 번 생성된 문자열은 변경할 수 없음 새로 생성되는 것
문자열을 수정하려고 하면 새로운 String 객체 생성

장점 : 문자열 값이 변경되지 않기 때문에 여러 스레드가 동시에 사용할 때 안전
단점 : 문자열을 많이 수정하는 작업을 할 경우 성능이 좋지 않음
      예를 들어 반복적인 문자열 합성은 많은 메모리와 시간이 소요됨

      String str = "Hello";
      str =str +"world"; // Helloworld 새로운 문자열 객체 생성

StringBuilder
 StringBuilder 길이가 변할 수 있는 객체로 문자열을 수정할 수 있음
 문자열을 변경하면 기존 객체를 수정해서 메모리 사용을 줄이고 성능을 향상

 장점 : 반복적으로 문자열을 수정할 때 성능이 좋음
        새로 만들기를 하기 보다는 내부에서 수정차리
 단점 : 스레드가 안전하지 않기 때문에 멀티스레드 환경에서는 사용할 때 주의
        StringBuilder sb =new StringBuilder
        sb.append("World"}
StringBuffer











특징       String                  StringBuilder            StringBuffer

불변성     불변                        가변                     가변

스레드    스레드 안전             스레드 안전 아님           스레드 안전
안전성                                (비동기)                 (동기)

성능      문자열이 변경될 때       문자열 변경 시            스레드 안전성을
           새로운 객체 생성          성능 우수             고려할 때 성능 우수


사용용도   값이 변경되지 않는       단일 스레드에서           멀티스레드에서
             문자열에 사용           문자열 변경시            문자열 변경시
                                         사용                      사용